{"formatVersion":"1.0","generatedAt":"2023-12-15T00:46:15Z","generatedBy":{"name":"SAP"},"name":"SAP BTP SDK for iOS Swift Packages","overview":"Swift Packages provided by the SAP BTP SDK for iOS","packages":[{"keywords":[],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios/main/README.md","summary":"Get the binary frameworks of the SAP BTP SDK for iOS through SPM and learn about related open-source Swift packages","url":"https://github.com/SAP/cloud-sdk-ios.git","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"cloud-sdk-ios","products":[{"name":"SAPCommon","targets":["SAPCommon"],"type":{"library":["automatic"]}},{"name":"SAPFiori","targets":["SAPFiori"],"type":{"library":["automatic"]}},{"name":"SAPFioriFlows","targets":["SAPFioriFlows"],"type":{"library":["automatic"]}},{"name":"SAPFoundation","targets":["SAPFoundation"],"type":{"library":["automatic"]}},{"name":"SAPML","targets":["SAPML"],"type":{"library":["automatic"]}},{"name":"SAPOData","targets":["SAPOData"],"type":{"library":["automatic"]}},{"name":"SAPOfflineOData","targets":["SAPOfflineOData"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCommon","name":"SAPCommon"},{"moduleName":"SAPFiori","name":"SAPFiori"},{"moduleName":"SAPFioriFlows","name":"SAPFioriFlows"},{"moduleName":"SAPFoundation","name":"SAPFoundation"},{"moduleName":"SAPML","name":"SAPML"},{"moduleName":"SAPOData","name":"SAPOData"},{"moduleName":"SAPOfflineOData","name":"SAPOfflineOData"}],"toolsVersion":"5.5"}},"version":"9.2.6"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"cloud-sdk-ios","products":[{"name":"SAPCommon","targets":["SAPCommon"],"type":{"library":["automatic"]}},{"name":"SAPFiori","targets":["SAPFiori"],"type":{"library":["automatic"]}},{"name":"SAPFioriFlows","targets":["SAPFioriFlows"],"type":{"library":["automatic"]}},{"name":"SAPFoundation","targets":["SAPFoundation"],"type":{"library":["automatic"]}},{"name":"SAPML","targets":["SAPML"],"type":{"library":["automatic"]}},{"name":"SAPOData","targets":["SAPOData"],"type":{"library":["automatic"]}},{"name":"SAPOfflineOData","targets":["SAPOfflineOData"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCommon","name":"SAPCommon"},{"moduleName":"SAPFiori","name":"SAPFiori"},{"moduleName":"SAPFioriFlows","name":"SAPFioriFlows"},{"moduleName":"SAPFoundation","name":"SAPFoundation"},{"moduleName":"SAPML","name":"SAPML"},{"moduleName":"SAPOData","name":"SAPOData"},{"moduleName":"SAPOfflineOData","name":"SAPOfflineOData"}],"toolsVersion":"5.5"}},"version":"9.2.5"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"cloud-sdk-ios","products":[{"name":"SAPCommon","targets":["SAPCommon"],"type":{"library":["automatic"]}},{"name":"SAPFiori","targets":["SAPFiori"],"type":{"library":["automatic"]}},{"name":"SAPFioriFlows","targets":["SAPFioriFlows"],"type":{"library":["automatic"]}},{"name":"SAPFoundation","targets":["SAPFoundation"],"type":{"library":["automatic"]}},{"name":"SAPML","targets":["SAPML"],"type":{"library":["automatic"]}},{"name":"SAPOData","targets":["SAPOData"],"type":{"library":["automatic"]}},{"name":"SAPOfflineOData","targets":["SAPOfflineOData"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCommon","name":"SAPCommon"},{"moduleName":"SAPFiori","name":"SAPFiori"},{"moduleName":"SAPFioriFlows","name":"SAPFioriFlows"},{"moduleName":"SAPFoundation","name":"SAPFoundation"},{"moduleName":"SAPML","name":"SAPML"},{"moduleName":"SAPOData","name":"SAPOData"},{"moduleName":"SAPOfflineOData","name":"SAPOfflineOData"}],"toolsVersion":"5.5"}},"version":"9.2.4"}]},{"keywords":["fiori","open-source","sap","swift","swiftui"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-fiori/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-fiori/main/README.md","summary":"SwiftUI implementation of the SAP Fiori for iOS Design Language.","url":"https://github.com/SAP/cloud-sdk-ios-fiori.git","versions":[{"defaultToolsVersion":"5.7","manifests":{"5.7":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"watchos","version":"7.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriThemeManager","targets":["FioriThemeManager"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriCharts","name":"FioriCharts"},{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriThemeManager","name":"FioriThemeManager"}],"toolsVersion":"5.7"}},"version":"3.3.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"watchos","version":"7.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriThemeManager","targets":["FioriThemeManager"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriCharts","name":"FioriCharts"},{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriThemeManager","name":"FioriThemeManager"}],"toolsVersion":"5.5"}},"summary":"chore(release): 3.2.0","version":"3.2.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"},{"name":"watchos","version":"7.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriThemeManager","targets":["FioriThemeManager"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriCharts","name":"FioriCharts"},{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriThemeManager","name":"FioriThemeManager"}],"toolsVersion":"5.5"}},"summary":"chore(release): 3.1.1","version":"3.1.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriIntegrationCards","targets":["FioriIntegrationCards"],"type":{"library":["dynamic"]}},{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}},{"name":"FioriThemeManager","targets":["FioriThemeManager"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriCharts","name":"FioriCharts"},{"moduleName":"FioriIntegrationCards","name":"FioriIntegrationCards"},{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"},{"moduleName":"FioriThemeManager","name":"FioriThemeManager"}],"toolsVersion":"5.3"}},"version":"2.2.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriIntegrationCards","targets":["FioriIntegrationCards"],"type":{"library":["dynamic"]}},{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriCharts","name":"FioriCharts"},{"moduleName":"FioriIntegrationCards","name":"FioriIntegrationCards"},{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"}],"toolsVersion":"5.3"}},"summary":"chore(release): 2.1.0","version":"2.1.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriSwiftUI","products":[{"name":"FioriCharts","targets":["FioriCharts"],"type":{"library":["dynamic"]}},{"name":"FioriIntegrationCards","targets":["FioriIntegrationCards"],"type":{"library":["dynamic"]}},{"name":"FioriSwiftUI","targets":["FioriSwiftUI"],"type":{"library":["dynamic"]}}],"targets":[{"moduleName":"FioriCharts","name":"FioriCharts"},{"moduleName":"FioriIntegrationCards","name":"FioriIntegrationCards"},{"moduleName":"FioriSwiftUI","name":"FioriSwiftUI"}],"toolsVersion":"5.3"}},"summary":"chore(release): 2.0.1","version":"2.0.1"}]},{"keywords":["arkit","opensource","realitycomposer","realitykit","swift","swiftui"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-fiori-ar/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-fiori-ar/main/README.md","summary":"SAP Fiori for iOS AR","url":"https://github.com/SAP/cloud-sdk-ios-fiori-ar.git","versions":[{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FioriAR","products":[{"name":"FioriAR","targets":["FioriAR-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"FioriAR-requiresToEmbedXCFrameworks","targets":["FioriAR-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FioriAR_withBinaryDependencies","name":"FioriAR-withBinaryDependencies"},{"moduleName":"FioriAR_withoutBinaryDependencies","name":"FioriAR-withoutBinaryDependencies"}],"toolsVersion":"5.5"}},"version":"3.0.1"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"15.0"}],"packageName":"FioriAR","products":[{"name":"FioriAR","targets":["FioriAR-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"FioriAR-requiresToEmbedXCFrameworks","targets":["FioriAR-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FioriAR_withBinaryDependencies","name":"FioriAR-withBinaryDependencies"},{"moduleName":"FioriAR_withoutBinaryDependencies","name":"FioriAR-withoutBinaryDependencies"}],"toolsVersion":"5.5"}},"version":"3.0.0"},{"defaultToolsVersion":"5.5","manifests":{"5.5":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"FioriAR","products":[{"name":"FioriAR","targets":["FioriAR-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"FioriAR-requiresToEmbedXCFrameworks","targets":["FioriAR-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"FioriAR_withBinaryDependencies","name":"FioriAR-withBinaryDependencies"},{"moduleName":"FioriAR_withoutBinaryDependencies","name":"FioriAR-withoutBinaryDependencies"}],"toolsVersion":"5.5"}},"version":"2.0.0"}]},{"keywords":["cai","chatbot","open-source","sap","swift","swiftui"],"license":{"name":"Apache-2.0","url":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-cai/main/LICENSE"},"readmeURL":"https://raw.githubusercontent.com/SAP/cloud-sdk-ios-cai/main/README.md","summary":"Swift package as module for interfacing with SAP Conversational AI in native iOS apps. ","url":"https://github.com/SAP/cloud-sdk-ios-cai.git","versions":[{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3"}},"version":"2.0.2"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3"}},"version":"2.0.1"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"14.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3"}},"version":"2.0.0"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3"}},"version":"1.0.5"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3"}},"version":"1.0.4"},{"defaultToolsVersion":"5.3","manifests":{"5.3":{"minimumPlatformVersions":[{"name":"ios","version":"13.0"}],"packageName":"SAPCAI","products":[{"name":"SAPCAI","targets":["SAPCAI-withBinaryDependencies"],"type":{"library":["automatic"]}},{"name":"SAPCAI-requiresToEmbedXCFrameworks","targets":["SAPCAI-withoutBinaryDependencies"],"type":{"library":["automatic"]}}],"targets":[{"moduleName":"SAPCAI_withBinaryDependencies","name":"SAPCAI-withBinaryDependencies"},{"moduleName":"SAPCAI_withoutBinaryDependencies","name":"SAPCAI-withoutBinaryDependencies"}],"toolsVersion":"5.3"}},"version":"1.0.3"}]}],"signature":{"certificate":{"issuer":{"commonName":"Apple Worldwide Developer Relations Certification Authority","organization":"Apple Inc.","organizationalUnit":"G3"},"subject":{"commonName":"Swift Package Collection: SAP SE","organization":"SAP SE","organizationalUnit":"4FE7U4H495","userID":"4FE7U4H495"}},"signature":"ewogICJhbGciIDogIlJTMjU2IiwKICAieDVjIiA6IFsKICAgICJNSUlGYkRDQ0JGU2dBd0lCQWdJUVlyMHZhZlJ1VzNyTVZSdW5JYnM5eHpBTkJna3Foa2lHOXcwQkFRc0ZBREIxTVVRd1FnWURWUVFERER0QmNIQnNaU0JYYjNKc1pIZHBaR1VnUkdWMlpXeHZjR1Z5SUZKbGJHRjBhVzl1Y3lCRFpYSjBhV1pwWTJGMGFXOXVJRUYxZEdodmNtbDBlVEVMTUFrR0ExVUVDd3dDUnpNeEV6QVJCZ05WQkFvTUNrRndjR3hsSUVsdVl5NHhDekFKQmdOVkJBWVRBbFZUTUI0WERUSXpNRE16TURFNE1UUXlORm9YRFRJME1ETXlPVEU0TVRReU0xb3dlakVhTUJnR0NnbVNKb21UOGl4a0FRRU1DalJHUlRkVk5FZzBPVFV4S1RBbkJnTlZCQU1NSUZOM2FXWjBJRkJoWTJ0aFoyVWdRMjlzYkdWamRHbHZiam9nVTBGUUlGTkZNUk13RVFZRFZRUUxEQW8wUmtVM1ZUUklORGsxTVE4d0RRWURWUVFLREFaVFFWQWdVMFV4Q3pBSkJnTlZCQVlUQWxWVE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMFBBVlhjTlRYQXZzZVY5SHJOOEhwdTJaR1lFS1FRZXkvNE5SZDVxOEovS2VtQ3pTcFh5L0x0WWt0QTVsQTZ0anBmc1NEejJoT3cxcEtBMytlTTkrN0QvaGxwaHVoeGF2b2VCTWl0N1U1aWpVcGRNTzFyRUV4a3h6eXg1T3dIblpQVUpjSnoxL05jYmJKbktRSUxtanExa3dDQzRpVGhIa1daZEVmZVpBV0QzNm5KWXBEaXo1cXJ6WVQwUjlHazExeis2Wng1SnpQaVVpV0tZRzlkdmFBOHFPeHVoa2x0MkowWWdkdGd5eHBtZ1BIRlZyZEg5NDhiNkN1dEIwYzZRQlZtVlpWSU9QVjI2Q096R0VyY25Fd3hHTjZSZ0pYVnhnc25oTHlKN3hDUzUzSWtyZC84Y2NnMHBDNDIzTk14cUU0SjBWeDh4NUJ4NS9rT2Rvd1V6R3N3SURBUUFCbzRJQjhUQ0NBZTB3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlFKL3NBVmtQbXZaQXFTRXJrbUtHTU1sK3luc2pCQkJnZ3JCZ0VGQlFjQkFRUTFNRE13TVFZSUt3WUJCUVVITUFHR0pXaDBkSEE2THk5dlkzTndMbUZ3Y0d4bExtTnZiUzl2WTNOd01ETXRkM2RrY21jek1Ua3dnZ0VlQmdOVkhTQUVnZ0VWTUlJQkVUQ0NBUTBHQ1NxR1NJYjNZMlFGQVRDQi96Q0J3d1lJS3dZQkJRVUhBZ0l3Z2JZTWdiTlNaV3hwWVc1alpTQnZiaUIwYUdseklHTmxjblJwWm1sallYUmxJR0o1SUdGdWVTQndZWEowZVNCaGMzTjFiV1Z6SUdGalkyVndkR0Z1WTJVZ2IyWWdkR2hsSUhSb1pXNGdZWEJ3YkdsallXSnNaU0J6ZEdGdVpHRnlaQ0IwWlhKdGN5QmhibVFnWTI5dVpHbDBhVzl1Y3lCdlppQjFjMlVzSUdObGNuUnBabWxqWVhSbElIQnZiR2xqZVNCaGJtUWdZMlZ5ZEdsbWFXTmhkR2x2YmlCd2NtRmpkR2xqWlNCemRHRjBaVzFsYm5SekxqQTNCZ2dyQmdFRkJRY0NBUllyYUhSMGNITTZMeTkzZDNjdVlYQndiR1V1WTI5dEwyTmxjblJwWm1sallYUmxZWFYwYUc5eWFYUjVMekFXQmdOVkhTVUJBZjhFRERBS0JnZ3JCZ0VGQlFjREF6QWRCZ05WSFE0RUZnUVU4bW9rUWkxeHdVdVZNTm1uMW5qYjY0ZHVZTTR3RGdZRFZSMFBBUUgvQkFRREFnZUFNQkFHQ2lxR1NJYjNZMlFHQVNNRUFnVUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFubFp6V3ZxcW1adHMvUGpRdmpOR0J1QUo2VVA4RGNEYXBzK3hvWENRMGkvNmFtQThRMDROakZUZXhrd0ZzV3NrVGhXQXVKNkhydDloWFFMUWF1WmxpSEVzMzFLb2crVlRua0VoQW1VTDJCSE1lODdWTGxaMStLQkRVcVh1SmRtZ21wQzlUREw1VHlCcjlqR1I4ZjJ3T1ZjQlh5VTg5VWtxcWF0Q2xHUWJyTUw5RUtZN2gyVmVqUUIvZzluMDArbkp0SlNraE1CeVRvVVNoSG1jMFFQdnhvMHdERnFvbzgwWTcrS1VSa0RBKytTOElWZnZnMXl4d1pmcUZUeHVKRTFCbG5rbGRkYVZHV0tpdGhhVllkd1NXMXZVOE5kYndqeG81eXNrdTZ3VHJHeVBFUjdRVHFMQjJKcUZBcjZTQ25uWnUxaTM2YlRIVTVZd05aQWNrRkhlaCIKICBdCn0..OPxWzvV1z28k8ZJpUfuow4FxE_2OgmXvLLHifMbg55LrdhL2rBqMFMgYPfCoZm7UaClbThHSKwl2QZA8T8pp-MKw0ViXxo6uauWjfL97Dfd5om_-pRHd9FzU3zxqdZzf1PtT_Bcc-7HKc7kTHz5ZjZLCMDJGwijn08gS3wMZdeeIwY-ieJ6S-sDRpxMWaOXUxByFdfzsGYGLfeEH3TN838kSQ-qzp3dBHFCnSQIKpQiCi3qjtV6yMiLXZnmpQtadjyjZMUXJNh2q_9kG3XEhP8rkrxCoqcn_vb3t-o4Gyqf66J0k1mRsA6JP7w5h78oZiKcJvH6P3xNizTe2mn0Fhg"}}